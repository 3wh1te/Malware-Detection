graph [
	name "01jsnpXSAlgw6aPeDxrU"
	vsize 28
	node [
		id 0
		label "unamed_function_1"
		type "Internal"
		features [
			val "CB:retf"
			val "CB:retf"
			val "CB:retf"
			val "B7:db"
			val "98:word_4022B2"
			val "B1:db"
			val "FF:word_402B92"
			val "08:or"
		]
	]
	node [
		id 1
		label "sub_5401C2"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "81:or"
			val "0D:or"
			val "81:adc"
			val "81:cmp"
			val "74:jz"
			val "81:sub"
			val "8D:lea"
			val "39:cmp"
			val "77:ja"
			val "15:adc"
			val "68:push"
			val "59:pop"
			val "31:xor"
			val "35:xor"
			val "0F B6:movzx"
			val "8D:lea"
			val "85:test"
			val "75:jnz"
			val "39:cmp"
			val "77:ja"
			val "81:adc"
			val "0D:or"
			val "13:adc"
			val "25:and"
			val "09:or"
			val "0D:or"
			val "09:or"
			val "81:xor"
			val "0F B6:movzx"
			val "8D:lea"
			val "39:cmp"
			val "7C:jl"
			val "0F B6:movzx"
			val "39:cmp"
			val "77:ja"
			val "0D:or"
			val "8D:lea"
			val "39:cmp"
			val "77:ja"
			val "35:xor"
			val "29:sub"
			val "81:xor"
			val "11:adc"
			val "81:sub"
			val "6A:push"
			val "58:pop"
			val "15:adc"
			val "15:adc"
			val "83:adc"
			val "15:adc"
			val "39:cmp"
			val "77:ja"
			val "85:test"
			val "7C:jl"
			val "0D:or"
			val "35:xor"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 2
		label "sub_5402A5"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "81:and"
			val "35:xor"
			val "8D:lea"
			val "0F B7:movzx"
			val "35:xor"
			val "39:cmp"
			val "77:ja"
			val "81:cmp"
			val "7C:jl"
			val "15:adc"
			val "13:adc"
			val "81:cmp"
			val "72:jb"
			val "11:adc"
			val "11:adc"
			val "68:push"
			val "58:pop"
			val "13:adc"
			val "3B:cmp"
			val "77:ja"
			val "81:add"
			val "85:test"
			val "77:ja"
			val "35:xor"
			val "19:sbb"
			val "15:adc"
			val "81:adc"
			val "11:adc"
			val "81:sub"
			val "0F B7:movzx"
			val "09:or"
			val "15:adc"
			val "0F B7:movzx"
			val "81:add"
			val "8D:lea"
			val "31:xor"
			val "8D:lea"
			val "05:add"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 3
		label "sub_54035B"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "68:push"
			val "58:pop"
			val "25:and"
			val "85:test"
			val "74:jz"
			val "85:test"
			val "77:ja"
			val "35:xor"
			val "81:xor"
			val "15:adc"
			val "11:adc"
			val "0D:or"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 4
		label "sub_540392"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "81:xor"
			val "0D:or"
			val "29:sub"
			val "11:adc"
			val "35:xor"
			val "39:cmp"
			val "7C:jl"
			val "15:adc"
			val "85:test"
			val "77:ja"
			val "31:xor"
			val "8D:lea"
			val "25:and"
			val "8D:lea"
			val "8D:lea"
			val "51:push"
			val "FF:push"
			val "68:push"
			val "E8:call"
			val "0F B7:movzx"
			val "83:and"
			val "52:push"
			val "E8:call"
			val "33:xor"
			val "35:xor"
			val "11:adc"
			val "31:xor"
			val "52:push"
			val "E8:call"
			val "6A:push"
			val "58:pop"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 5
		label "unamed_function_5"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "81:cmp"
			val "72:jb"
			val "81:adc"
			val "2D:sub"
			val "8D:lea"
			val "0D:or"
			val "11:adc"
			val "68:push"
			val "58:pop"
			val "15:adc"
			val "0F B7:movzx"
			val "C9:leave"
			val "C3:retn"
		]
	]
	node [
		id 6
		label "sub_540450"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "83:and"
			val "52:push"
			val "51:push"
			val "52:push"
			val "6A:push"
			val "E8:call"
			val "39:cmp"
			val "74:jz"
			val "81:adc"
			val "0D:or"
			val "1D:sbb"
			val "6A:push"
			val "58:pop"
			val "39:cmp"
			val "75:jnz"
			val "81:sbb"
			val "2D:sub"
			val "15:adc"
			val "31:xor"
			val "81:adc"
			val "6A:push"
			val "58:pop"
			val "8D:lea"
			val "0D:or"
			val "0F B6:movzx"
			val "81:sub"
			val "29:sub"
			val "50:push"
			val "E8:call"
			val "85:test"
			val "77:ja"
			val "15:adc"
			val "81:or"
			val "09:or"
			val "29:sub"
			val "09:or"
			val "39:cmp"
			val "75:jnz"
			val "0F B6:movzx"
			val "31:xor"
			val "0D:or"
			val "6A:push"
			val "58:pop"
			val "15:adc"
			val "2D:sub"
			val "29:sub"
			val "51:push"
			val "E8:call"
			val "6A:push"
			val "58:pop"
			val "0F B7:movzx"
			val "35:xor"
			val "81:cmp"
			val "77:ja"
			val "81:xor"
			val "8D:lea"
			val "8D:lea"
			val "39:cmp"
			val "77:ja"
			val "8D:lea"
			val "81:adc"
			val "0F B7:movzx"
			val "85:test"
			val "72:jb"
			val "15:adc"
			val "39:cmp"
			val "7C:jl"
			val "81:xor"
			val "25:and"
			val "11:adc"
			val "3B:cmp"
			val "74:jz"
			val "85:test"
			val "77:ja"
			val "0F B6:movzx"
			val "0F B7:movzx"
			val "2D:sub"
			val "81:or"
			val "25:and"
			val "15:adc"
			val "68:push"
			val "58:pop"
			val "68:push"
			val "58:pop"
			val "8D:lea"
			val "31:xor"
			val "8D:lea"
			val "11:adc"
			val "11:adc"
			val "8D:lea"
			val "81:or"
			val "11:adc"
			val "68:push"
			val "58:pop"
			val "0F B7:movzx"
			val "15:adc"
			val "8D:lea"
			val "15:adc"
			val "15:adc"
			val "81:xor"
			val "81:cmp"
			val "77:ja"
			val "85:test"
			val "77:ja"
			val "81:cmp"
			val "77:ja"
			val "09:or"
			val "29:sub"
			val "35:xor"
			val "81:adc"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 7
		label "sub_5405FA"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "8D:lea"
			val "52:push"
			val "51:push"
			val "52:push"
			val "E8:call"
			val "15:adc"
			val "81:adc"
			val "8D:lea"
			val "52:push"
			val "52:push"
			val "68:push"
			val "E8:call"
			val "15:adc"
			val "8D:lea"
			val "51:push"
			val "FF:push"
			val "52:push"
			val "E8:call"
			val "81:adc"
			val "8D:lea"
			val "6A:push"
			val "68:push"
			val "68:push"
			val "6A:push"
			val "FF:call"
			val "A3:mov"
			val "81:adc"
			val "11:adc"
			val "8D:lea"
			val "81:xor"
			val "15:adc"
			val "0F B7:movzx"
			val "8D:lea"
			val "8D:lea"
			val "F7:test"
			val "77:ja"
			val "81:cmp"
			val "77:ja"
			val "85:test"
			val "7C:jl"
			val "0D:or"
			val "21:and"
			val "0D:or"
			val "81:xor"
			val "81:xor"
			val "29:sub"
			val "51:push"
			val "E8:call"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 8
		label "sub_5406C8"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "53:push"
			val "56:push"
			val "57:push"
			val "8D:lea"
			val "50:push"
			val "52:push"
			val "E8:call"
			val "0F B6:movzx"
			val "11:adc"
			val "15:adc"
			val "6A:push"
			val "FF:push"
			val "52:push"
			val "6A:push"
			val "E8:call"
			val "8D:lea"
			val "6A:push"
			val "58:pop"
			val "31:xor"
			val "51:push"
			val "50:push"
			val "50:push"
			val "6A:push"
			val "E8:call"
			val "11:adc"
			val "09:or"
			val "0F B6:movzx"
			val "11:adc"
			val "81:adc"
			val "05:add"
			val "6A:push"
			val "58:pop"
			val "8D:lea"
			val "52:push"
			val "68:push"
			val "51:push"
			val "E8:call"
			val "81:adc"
			val "0F B6:movzx"
			val "8D:lea"
			val "52:push"
			val "50:push"
			val "E8:call"
			val "0D:or"
			val "31:xor"
			val "8D:lea"
			val "50:push"
			val "68:push"
			val "E8:call"
			val "25:and"
			val "FF:push"
			val "50:push"
			val "E8:call"
			val "0F B7:movzx"
			val "8D:lea"
			val "52:push"
			val "68:push"
			val "E8:call"
			val "09:or"
			val "6A:push"
			val "FF:push"
			val "51:push"
			val "6A:push"
			val "E8:call"
			val "2D:sub"
			val "15:adc"
			val "31:xor"
			val "50:push"
			val "68:push"
			val "68:push"
			val "68:push"
			val "54:push"
			val "FF:call"
			val "83:add"
			val "81:xor"
			val "11:adc"
			val "8D:lea"
			val "81:adc"
			val "33:xor"
			val "81:or"
			val "81:adc"
			val "39:cmp"
			val "7C:jl"
			val "81:cmp"
			val "77:ja"
			val "39:cmp"
			val "74:jz"
			val "81:or"
			val "81:add"
			val "81:add"
			val "68:push"
			val "5A:pop"
			val "81:xor"
			val "8D:lea"
			val "81:or"
			val "0F B6:movzx"
			val "81:or"
			val "85:test"
			val "74:jz"
			val "68:push"
			val "5A:pop"
			val "8D:lea"
			val "81:or"
			val "85:test"
			val "7C:jl"
			val "6A:push"
			val "59:pop"
			val "81:or"
			val "39:cmp"
			val "77:ja"
			val "0F B6:movzx"
			val "31:xor"
			val "0F B6:movzx"
			val "81:xor"
			val "11:adc"
			val "85:test"
			val "74:jz"
			val "85:test"
			val "77:ja"
			val "81:sbb"
			val "68:push"
			val "5A:pop"
			val "81:xor"
			val "81:sub"
			val "81:adc"
			val "81:sbb"
			val "33:xor"
			val "2B:sub"
			val "0F B7:movzx"
			val "81:adc"
			val "85:test"
			val "74:jz"
			val "81:adc"
			val "85:test"
			val "7C:jl"
			val "81:cmp"
			val "75:jnz"
			val "39:cmp"
			val "77:ja"
			val "81:xor"
			val "6A:push"
			val "59:pop"
			val "81:xor"
			val "21:and"
			val "81:adc"
			val "8D:lea"
			val "31:xor"
			val "21:and"
			val "81:or"
			val "85:test"
			val "77:ja"
			val "11:adc"
			val "81:adc"
			val "09:or"
			val "81:xor"
			val "39:cmp"
			val "75:jnz"
			val "0F B7:movzx"
			val "11:adc"
			val "11:adc"
			val "81:or"
			val "68:push"
			val "5A:pop"
			val "85:test"
			val "77:ja"
			val "0F B6:movzx"
			val "81:adc"
			val "0F B6:movzx"
			val "81:adc"
			val "11:adc"
			val "81:xor"
			val "8D:lea"
			val "11:adc"
			val "81:cmp"
			val "74:jz"
			val "09:or"
			val "81:or"
			val "F7:test"
			val "74:jz"
			val "81:adc"
			val "81:adc"
			val "81:adc"
			val "81:or"
			val "8D:lea"
			val "81:add"
			val "8D:lea"
			val "81:or"
			val "81:or"
			val "11:adc"
			val "11:adc"
			val "81:xor"
			val "39:cmp"
			val "77:ja"
			val "81:cmp"
			val "74:jz"
			val "81:cmp"
			val "7C:jl"
			val "21:and"
			val "0F B6:movzx"
			val "81:adc"
			val "29:sub"
			val "29:sub"
			val "81:adc"
			val "81:adc"
			val "8D:lea"
			val "81:or"
			val "81:xor"
			val "81:adc"
			val "39:cmp"
			val "77:ja"
			val "81:cmp"
			val "77:ja"
			val "29:sub"
			val "81:or"
			val "81:sub"
			val "0F B6:movzx"
			val "85:test"
			val "7E:jle"
			val "81:or"
			val "11:adc"
			val "8D:lea"
			val "81:adc"
			val "85:test"
			val "75:jnz"
			val "68:push"
			val "59:pop"
			val "8D:lea"
			val "81:adc"
			val "39:cmp"
			val "77:ja"
			val "11:adc"
			val "81:adc"
			val "31:xor"
			val "81:sbb"
			val "81:xor"
			val "81:cmp"
			val "7C:jl"
			val "81:xor"
			val "11:adc"
			val "8D:lea"
			val "0F B6:movzx"
			val "81:or"
			val "85:test"
			val "7E:jle"
			val "8D:lea"
			val "81:adc"
			val "6A:push"
			val "59:pop"
			val "81:xor"
			val "09:or"
			val "81:adc"
			val "0F B7:movzx"
			val "81:xor"
			val "81:xor"
			val "81:cmp"
			val "74:jz"
			val "81:xor"
			val "81:cmp"
			val "77:ja"
			val "0F B6:movzx"
			val "6A:push"
			val "59:pop"
			val "11:adc"
			val "0F B6:movzx"
			val "8D:lea"
			val "21:and"
			val "09:or"
			val "6A:push"
			val "5A:pop"
			val "81:xor"
			val "81:adc"
			val "81:adc"
			val "85:test"
			val "7E:jle"
			val "81:or"
			val "81:and"
			val "85:test"
			val "74:jz"
			val "8D:lea"
			val "8D:lea"
			val "8D:lea"
			val "81:adc"
			val "39:cmp"
			val "77:ja"
			val "81:or"
			val "31:xor"
			val "81:adc"
			val "81:adc"
			val "81:adc"
			val "85:test"
			val "7C:jl"
			val "85:test"
			val "77:ja"
			val "8D:lea"
			val "6A:push"
			val "5A:pop"
			val "31:xor"
			val "81:xor"
			val "35:xor"
			val "0F B7:movzx"
			val "81:cmp"
			val "74:jz"
			val "33:xor"
			val "0F B7:movzx"
			val "11:adc"
			val "85:test"
			val "7C:jl"
			val "31:xor"
			val "0F B7:movzx"
			val "15:adc"
			val "15:adc"
			val "15:adc"
			val "31:xor"
			val "50:push"
			val "68:push"
			val "68:push"
			val "68:push"
			val "54:push"
			val "FF:call"
			val "83:add"
			val "81:sbb"
			val "8D:lea"
			val "81:sbb"
			val "0F B6:movzx"
			val "68:push"
			val "5A:pop"
			val "39:cmp"
			val "74:jz"
			val "11:adc"
			val "81:or"
			val "85:test"
			val "77:ja"
			val "29:sub"
			val "11:adc"
			val "81:or"
			val "11:adc"
			val "81:adc"
			val "81:or"
			val "8D:lea"
			val "85:test"
			val "7E:jle"
			val "0F B7:movzx"
			val "11:adc"
			val "23:and"
			val "0F B6:movzx"
			val "0F B7:movzx"
			val "81:adc"
			val "81:xor"
			val "81:xor"
			val "85:test"
			val "7C:jl"
			val "11:adc"
			val "81:adc"
			val "0F B6:movzx"
			val "81:adc"
			val "8D:lea"
			val "81:cmp"
			val "77:ja"
			val "81:cmp"
			val "7C:jl"
			val "0F B7:movzx"
			val "11:adc"
			val "81:cmp"
			val "74:jz"
			val "85:test"
			val "77:ja"
			val "81:sbb"
			val "01:add"
			val "8D:lea"
			val "81:sub"
			val "0F B6:movzx"
			val "81:adc"
			val "81:adc"
			val "81:sub"
			val "0F B7:movzx"
			val "81:adc"
			val "11:adc"
			val "81:adc"
			val "6A:push"
			val "5A:pop"
			val "8D:lea"
			val "11:adc"
			val "81:add"
			val "81:xor"
			val "83:and"
			val "51:push"
			val "68:push"
			val "51:push"
			val "6A:push"
			val "E8:call"
			val "8D:lea"
			val "6A:push"
			val "58:pop"
			val "81:xor"
			val "81:cmp"
			val "7C:jl"
			val "0F B7:movzx"
			val "11:adc"
			val "0D:or"
			val "15:adc"
			val "21:and"
			val "85:test"
			val "74:jz"
			val "21:and"
			val "0F B7:movzx"
			val "81:adc"
			val "35:xor"
			val "33:xor"
			val "81:xor"
			val "0D:or"
			val "0F B6:movzx"
			val "35:xor"
			val "31:xor"
			val "8D:lea"
			val "50:push"
			val "52:push"
			val "E8:call"
			val "11:adc"
			val "29:sub"
			val "52:push"
			val "E8:call"
			val "8D:lea"
			val "8D:lea"
			val "50:push"
			val "68:push"
			val "E8:call"
			val "1D:sbb"
			val "85:test"
			val "77:ja"
			val "85:test"
			val "74:jz"
			val "35:xor"
			val "81:and"
			val "13:adc"
			val "15:adc"
			val "0F B6:movzx"
			val "09:or"
			val "8D:lea"
			val "68:push"
			val "50:push"
			val "E8:call"
			val "0D:or"
			val "35:xor"
			val "8D:lea"
			val "8D:lea"
			val "52:push"
			val "50:push"
			val "E8:call"
			val "35:xor"
			val "31:xor"
			val "8D:lea"
			val "51:push"
			val "FF:push"
			val "E8:call"
			val "2D:sub"
			val "15:adc"
			val "31:xor"
			val "50:push"
			val "68:push"
			val "51:push"
			val "6A:push"
			val "E8:call"
			val "5F:pop"
			val "5E:pop"
			val "5B:pop"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 9
		label "sub_540DF7"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 10
		label "sub_540E04"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "8D:lea"
			val "50:push"
			val "52:push"
			val "FF:push"
			val "E8:call"
			val "81:and"
			val "0F B6:movzx"
			val "09:or"
			val "0F B6:movzx"
			val "81:cmp"
			val "7C:jl"
			val "35:xor"
			val "35:xor"
			val "39:cmp"
			val "74:jz"
			val "15:adc"
			val "81:or"
			val "0F B6:movzx"
			val "35:xor"
			val "6A:push"
			val "50:push"
			val "68:push"
			val "29:sub"
			val "50:push"
			val "E8:call"
			val "11:adc"
			val "15:adc"
			val "0F B6:movzx"
			val "39:cmp"
			val "7C:jl"
			val "39:cmp"
			val "77:ja"
			val "39:cmp"
			val "74:jz"
			val "8D:lea"
			val "11:adc"
			val "01:add"
			val "81:xor"
			val "FF:push"
			val "FF:push"
			val "E8:call"
			val "19:sbb"
			val "0F B6:movzx"
			val "0F B6:movzx"
			val "81:or"
			val "85:test"
			val "75:jnz"
			val "81:cmp"
			val "77:ja"
			val "39:cmp"
			val "77:ja"
			val "35:xor"
			val "81:or"
			val "11:adc"
			val "2D:sub"
			val "15:adc"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 11
		label "sub_540EF5"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "0D:or"
			val "8D:lea"
			val "2D:sub"
			val "21:and"
			val "39:cmp"
			val "7C:jl"
			val "23:and"
			val "15:adc"
			val "01:add"
			val "68:push"
			val "58:pop"
			val "39:cmp"
			val "7C:jl"
			val "81:xor"
			val "31:xor"
			val "29:sub"
			val "0F B7:movzx"
			val "0F B7:movzx"
			val "35:xor"
			val "68:push"
			val "58:pop"
			val "0F B6:movzx"
			val "11:adc"
			val "0F B7:movzx"
			val "8D:lea"
			val "0D:or"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 12
		label "sub_540F61"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "31:xor"
			val "51:push"
			val "68:push"
			val "68:push"
			val "6A:push"
			val "E8:call"
			val "31:xor"
			val "15:adc"
			val "81:xor"
			val "01:add"
			val "15:adc"
			val "0F B6:movzx"
			val "85:test"
			val "74:jz"
			val "39:cmp"
			val "77:ja"
			val "85:test"
			val "77:ja"
			val "0F B6:movzx"
			val "81:sub"
			val "0F B6:movzx"
			val "81:sub"
			val "35:xor"
			val "8D:lea"
			val "50:push"
			val "68:push"
			val "E8:call"
			val "11:adc"
			val "81:adc"
			val "81:xor"
			val "8D:lea"
			val "81:adc"
			val "81:cmp"
			val "75:jnz"
			val "39:cmp"
			val "77:ja"
			val "39:cmp"
			val "7C:jl"
			val "6A:push"
			val "58:pop"
			val "81:adc"
			val "81:and"
			val "0F B6:movzx"
			val "0F B7:movzx"
			val "15:adc"
			val "81:cmp"
			val "77:ja"
			val "0F B6:movzx"
			val "15:adc"
			val "81:or"
			val "81:or"
			val "0F B6:movzx"
			val "83:and"
			val "51:push"
			val "FF:push"
			val "FF:push"
			val "6A:push"
			val "E8:call"
			val "0F B6:movzx"
			val "15:adc"
			val "6A:push"
			val "8D:lea"
			val "50:push"
			val "FF:push"
			val "8D:lea"
			val "52:push"
			val "E8:call"
			val "0F B7:movzx"
			val "15:adc"
			val "35:xor"
			val "6A:push"
			val "8D:lea"
			val "51:push"
			val "8D:lea"
			val "51:push"
			val "6A:push"
			val "E8:call"
			val "81:xor"
			val "31:xor"
			val "52:push"
			val "8D:lea"
			val "51:push"
			val "8D:lea"
			val "52:push"
			val "6A:push"
			val "E8:call"
			val "8D:lea"
			val "51:push"
			val "FF:push"
			val "E8:call"
			val "11:adc"
			val "2D:sub"
			val "0D:or"
			val "81:cmp"
			val "77:ja"
			val "3B:cmp"
			val "77:ja"
			val "81:adc"
			val "8D:lea"
			val "15:adc"
			val "83:and"
			val "50:push"
			val "50:push"
			val "68:push"
			val "31:xor"
			val "52:push"
			val "E8:call"
			val "81:xor"
			val "8D:lea"
			val "39:cmp"
			val "77:ja"
			val "0F B7:movzx"
			val "81:adc"
			val "6A:push"
			val "58:pop"
			val "31:xor"
			val "31:xor"
			val "39:cmp"
			val "7C:jl"
			val "0F B6:movzx"
			val "31:xor"
			val "33:xor"
			val "81:adc"
			val "13:adc"
			val "11:adc"
			val "31:xor"
			val "BE:mov"
			val "0F B6:movzx"
			val "11:adc"
			val "31:xor"
			val "81:cmp"
			val "77:ja"
			val "8D:lea"
			val "8D:lea"
			val "05:add"
			val "85:test"
			val "7C:jl"
			val "31:xor"
			val "51:push"
			val "8D:lea"
			val "50:push"
			val "8D:lea"
			val "52:push"
			val "6A:push"
			val "E8:call"
			val "FF:push"
			val "51:push"
			val "E8:call"
			val "35:xor"
			val "6A:push"
			val "FF:push"
			val "50:push"
			val "6A:push"
			val "E8:call"
			val "29:sub"
			val "35:xor"
			val "6A:push"
			val "58:pop"
			val "68:push"
			val "5A:pop"
			val "8D:lea"
			val "51:push"
			val "50:push"
			val "E8:call"
			val "1B:sbb"
			val "81:or"
			val "81:cmp"
			val "75:jnz"
			val "15:adc"
			val "8B:mov"
			val "8D:lea"
			val "52:push"
			val "FF:push"
			val "E8:call"
			val "8D:lea"
			val "50:push"
			val "FF:push"
			val "51:push"
			val "E8:call"
			val "31:xor"
			val "2D:sub"
			val "31:xor"
			val "68:push"
			val "5A:pop"
			val "35:xor"
			val "85:test"
			val "77:ja"
			val "81:cmp"
			val "77:ja"
			val "81:cmp"
			val "77:ja"
			val "8D:lea"
			val "0D:or"
			val "03:add"
			val "15:adc"
			val "BB:mov"
			val "8D:lea"
			val "50:push"
			val "52:push"
			val "E8:call"
			val "8D:lea"
			val "51:push"
			val "52:push"
			val "50:push"
			val "E8:call"
			val "C7:mov"
			val "09:or"
			val "31:xor"
			val "81:adc"
			val "29:sub"
			val "0D:or"
			val "85:test"
			val "7C:jl"
			val "3B:cmp"
			val "7C:jl"
			val "29:sub"
			val "52:push"
			val "51:push"
			val "52:push"
			val "31:xor"
			val "51:push"
			val "E8:call"
			val "A5:movsd"
			val "8D:lea"
			val "50:push"
			val "52:push"
			val "E8:call"
			val "31:xor"
			val "6A:push"
			val "51:push"
			val "FF:push"
			val "31:xor"
			val "50:push"
			val "E8:call"
			val "11:adc"
			val "31:xor"
			val "8D:lea"
			val "0F B6:movzx"
			val "35:xor"
			val "8D:lea"
			val "13:adc"
			val "85:test"
			val "7C:jl"
			val "85:test"
			val "74:jz"
			val "0F B7:movzx"
			val "81:xor"
			val "29:sub"
			val "29:sub"
			val "50:push"
			val "E8:call"
			val "0B:or"
			val "0F B7:movzx"
			val "0D:or"
			val "81:adc"
			val "0F B6:movzx"
			val "8D:lea"
			val "81:cmp"
			val "72:jb"
			val "39:cmp"
			val "77:ja"
			val "39:cmp"
			val "77:ja"
			val "09:or"
			val "25:and"
			val "8D:lea"
			val "15:adc"
			val "6A:push"
			val "8D:lea"
			val "50:push"
			val "52:push"
			val "8D:lea"
			val "52:push"
			val "E8:call"
			val "13:adc"
			val "8D:lea"
			val "81:adc"
			val "50:push"
			val "50:push"
			val "E8:call"
			val "1D:sbb"
			val "8D:lea"
			val "50:push"
			val "51:push"
			val "E8:call"
			val "81:and"
			val "11:adc"
			val "68:push"
			val "68:push"
			val "E8:call"
			val "8D:lea"
			val "6A:push"
			val "8D:lea"
			val "51:push"
			val "8D:lea"
			val "52:push"
			val "6A:push"
			val "E8:call"
			val "11:adc"
			val "15:adc"
			val "35:xor"
			val "8D:lea"
			val "09:or"
			val "11:adc"
			val "0D:or"
			val "6A:push"
			val "58:pop"
			val "81:cmp"
			val "77:ja"
			val "39:cmp"
			val "7C:jl"
			val "81:cmp"
			val "77:ja"
			val "0D:or"
			val "6A:push"
			val "58:pop"
			val "8D:lea"
			val "8D:lea"
			val "29:sub"
			val "51:push"
			val "8D:lea"
			val "51:push"
			val "8D:lea"
			val "51:push"
			val "6A:push"
			val "E8:call"
			val "35:xor"
			val "3B:cmp"
			val "74:jz"
			val "15:adc"
			val "8D:lea"
			val "81:cmp"
			val "74:jz"
			val "0B:or"
			val "0F B6:movzx"
			val "15:adc"
			val "83:and"
			val "51:push"
			val "68:push"
			val "52:push"
			val "31:xor"
			val "51:push"
			val "E8:call"
			val "8D:lea"
			val "81:adc"
			val "81:cmp"
			val "74:jz"
			val "39:cmp"
			val "7C:jl"
			val "8D:lea"
			val "8D:lea"
			val "35:xor"
			val "8D:lea"
			val "51:push"
			val "52:push"
			val "68:push"
			val "E8:call"
			val "15:adc"
			val "8D:lea"
			val "6A:push"
			val "58:pop"
			val "0F B6:movzx"
			val "15:adc"
			val "15:adc"
			val "8D:lea"
			val "11:adc"
			val "81:cmp"
			val "77:ja"
			val "81:cmp"
			val "74:jz"
			val "81:cmp"
			val "7C:jl"
			val "25:and"
			val "2D:sub"
			val "0D:or"
			val "11:adc"
			val "33:xor"
			val "15:adc"
			val "31:xor"
			val "50:push"
			val "52:push"
			val "50:push"
			val "83:and"
			val "52:push"
			val "E8:call"
			val "31:xor"
			val "33:xor"
			val "19:sbb"
			val "2D:sub"
			val "15:adc"
			val "85:test"
			val "7C:jl"
			val "81:and"
			val "25:and"
			val "0F B6:movzx"
			val "3B:cmp"
			val "77:ja"
			val "81:adc"
			val "15:adc"
			val "15:adc"
			val "15:adc"
			val "8D:lea"
			val "05:add"
			val "81:add"
			val "03:add"
			val "6A:push"
			val "52:push"
			val "FF:push"
			val "6A:push"
			val "E8:call"
			val "0F B6:movzx"
			val "85:test"
			val "77:ja"
			val "85:test"
			val "77:ja"
			val "11:adc"
			val "81:xor"
			val "31:xor"
			val "0F B6:movzx"
			val "83:and"
			val "50:push"
			val "68:push"
			val "FF:push"
			val "6A:push"
			val "E8:call"
			val "81:xor"
			val "8D:lea"
			val "81:cmp"
			val "77:ja"
			val "33:xor"
			val "85:test"
			val "74:jz"
			val "81:or"
			val "31:xor"
			val "35:xor"
			val "81:add"
			val "29:sub"
			val "50:push"
			val "8D:lea"
			val "52:push"
			val "8D:lea"
			val "50:push"
			val "6A:push"
			val "E8:call"
			val "81:cmp"
			val "0F 85:jnz"
			val "8D:lea"
			val "51:push"
			val "50:push"
			val "68:push"
			val "E8:call"
			val "8D:lea"
			val "0D:or"
			val "81:adc"
			val "35:xor"
			val "11:adc"
			val "85:test"
			val "72:jb"
			val "09:or"
			val "81:cmp"
			val "74:jz"
			val "81:or"
			val "81:cmp"
			val "77:ja"
			val "0F B7:movzx"
			val "0F B6:movzx"
			val "85:test"
			val "74:jz"
			val "0F B7:movzx"
			val "2D:sub"
			val "15:adc"
			val "81:adc"
			val "81:adc"
			val "0D:or"
			val "0F B6:movzx"
			val "31:xor"
			val "0F B6:movzx"
			val "8D:lea"
			val "15:adc"
			val "83:and"
			val "50:push"
			val "FF:push"
			val "FF:push"
			val "29:sub"
			val "51:push"
			val "E8:call"
			val "39:cmp"
			val "77:ja"
			val "05:add"
			val "0D:or"
			val "8D:lea"
			val "50:push"
			val "50:push"
			val "FF:push"
			val "E8:call"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 13
		label "sub_541695"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "6A:push"
			val "51:push"
			val "51:push"
			val "31:xor"
			val "50:push"
			val "E8:call"
			val "51:push"
			val "52:push"
			val "E8:call"
			val "FF:push"
			val "50:push"
			val "E8:call"
			val "C9:leave"
			val "C3:retn"
		]
	]
	node [
		id 14
		label "sub_5416BF"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "8D:lea"
			val "52:push"
			val "52:push"
			val "E8:call"
			val "8D:lea"
			val "81:adc"
			val "83:and"
			val "50:push"
			val "8D:lea"
			val "50:push"
			val "8D:lea"
			val "50:push"
			val "6A:push"
			val "E8:call"
			val "0F B7:movzx"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 15
		label "sub_541702"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "6A:push"
			val "8D:lea"
			val "50:push"
			val "50:push"
			val "8D:lea"
			val "50:push"
			val "E8:call"
			val "FF:call"
			val "6A:push"
			val "E8:call"
			val "29:sub"
			val "6A:push"
			val "58:pop"
			val "81:or"
			val "11:adc"
			val "8D:lea"
			val "81:cmp"
			val "77:ja"
			val "0F B6:movzx"
			val "15:adc"
			val "6A:push"
			val "58:pop"
			val "81:cmp"
			val "77:ja"
			val "81:xor"
			val "35:xor"
			val "31:xor"
			val "01:add"
			val "81:xor"
			val "31:xor"
			val "52:push"
			val "52:push"
			val "68:push"
			val "6A:push"
			val "E8:call"
			val "C9:leave"
			val "C3:retn"
		]
	]
	node [
		id 16
		label "unamed_function_15"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "8D:lea"
			val "50:push"
			val "68:push"
			val "E8:call"
			val "6A:push"
			val "FF:push"
			val "FF:push"
			val "6A:push"
			val "E8:call"
			val "81:xor"
			val "11:adc"
			val "8D:lea"
			val "52:push"
			val "52:push"
			val "52:push"
			val "E8:call"
			val "81:adc"
			val "68:push"
			val "5A:pop"
			val "8D:lea"
			val "51:push"
			val "68:push"
			val "6A:push"
			val "E8:call"
			val "0D:or"
			val "8D:lea"
			val "8D:lea"
			val "52:push"
			val "FF:push"
			val "E8:call"
			val "81:xor"
			val "2D:sub"
			val "25:and"
			val "8D:lea"
			val "52:push"
			val "51:push"
			val "E8:call"
			val "29:sub"
			val "68:push"
			val "FF:push"
			val "E8:call"
			val "83:and"
			val "52:push"
			val "50:push"
			val "FF:push"
			val "29:sub"
			val "52:push"
			val "E8:call"
			val "8D:lea"
			val "0F B6:movzx"
			val "81:adc"
			val "8D:lea"
			val "11:adc"
			val "35:xor"
			val "15:adc"
			val "13:adc"
			val "85:test"
			val "7C:jl"
			val "85:test"
			val "77:ja"
			val "F7:test"
			val "74:jz"
			val "6A:push"
			val "5A:pop"
			val "81:adc"
			val "8D:lea"
			val "68:push"
			val "58:pop"
			val "81:xor"
			val "8D:lea"
			val "E8:call"
			val "81:adc"
			val "11:adc"
			val "81:sbb"
			val "2D:sub"
			val "8D:lea"
			val "39:cmp"
			val "77:ja"
			val "81:cmp"
			val "77:ja"
			val "0F B6:movzx"
			val "35:xor"
			val "0B:or"
			val "0D:or"
			val "31:xor"
			val "51:push"
			val "51:push"
			val "68:push"
			val "31:xor"
			val "52:push"
			val "E8:call"
			val "39:cmp"
			val "7C:jl"
			val "85:test"
			val "77:ja"
			val "6A:push"
			val "58:pop"
			val "31:xor"
			val "E8:call"
			val "35:xor"
			val "0F B6:movzx"
			val "81:cmp"
			val "74:jz"
			val "81:adc"
			val "81:cmp"
			val "77:ja"
			val "6A:push"
			val "5A:pop"
			val "6A:push"
			val "5A:pop"
			val "15:adc"
			val "81:adc"
			val "15:adc"
			val "68:push"
			val "58:pop"
			val "0D:or"
			val "35:xor"
			val "31:xor"
			val "8D:lea"
			val "51:push"
			val "68:push"
			val "8D:lea"
			val "52:push"
			val "6A:push"
			val "E8:call"
			val "09:or"
			val "15:adc"
			val "8D:lea"
			val "33:xor"
			val "0B:or"
			val "13:adc"
			val "39:cmp"
			val "74:jz"
			val "39:cmp"
			val "7C:jl"
			val "81:adc"
			val "11:adc"
			val "35:xor"
			val "6A:push"
			val "6A:push"
			val "E8:call"
			val "2D:sub"
			val "0F B6:movzx"
			val "15:adc"
			val "8D:lea"
			val "50:push"
			val "68:push"
			val "FF:push"
			val "E8:call"
			val "8D:lea"
			val "E8:call"
			val "31:xor"
			val "52:push"
			val "51:push"
			val "31:xor"
			val "51:push"
			val "E8:call"
			val "8D:lea"
			val "51:push"
			val "51:push"
			val "68:push"
			val "E8:call"
			val "35:xor"
			val "8D:lea"
			val "51:push"
			val "FF:push"
			val "E8:call"
			val "81:xor"
			val "8D:lea"
			val "8D:lea"
			val "83:and"
			val "52:push"
			val "8D:lea"
			val "51:push"
			val "8D:lea"
			val "51:push"
			val "6A:push"
			val "E8:call"
			val "81:adc"
			val "15:adc"
			val "E8:call"
			val "31:xor"
			val "51:push"
			val "E8:call"
			val "39:cmp"
			val "75:jnz"
			val "31:xor"
			val "11:adc"
			val "35:xor"
			val "39:cmp"
			val "77:ja"
			val "85:test"
			val "74:jz"
			val "0F B7:movzx"
			val "15:adc"
			val "15:adc"
			val "11:adc"
			val "39:cmp"
			val "74:jz"
			val "8D:lea"
			val "25:and"
			val "05:add"
			val "39:cmp"
			val "77:ja"
			val "8D:lea"
			val "68:push"
			val "58:pop"
			val "81:adc"
			val "0F B6:movzx"
			val "35:xor"
			val "0F B7:movzx"
			val "15:adc"
			val "31:xor"
			val "0F B7:movzx"
			val "8D:lea"
			val "11:adc"
			val "81:adc"
			val "0D:or"
			val "35:xor"
			val "0F B7:movzx"
			val "35:xor"
			val "15:adc"
			val "35:xor"
			val "01:add"
			val "8D:lea"
			val "E8:call"
			val "15:adc"
			val "81:and"
			val "2D:sub"
			val "85:test"
			val "77:ja"
			val "0F B7:movzx"
			val "35:xor"
			val "8D:lea"
			val "81:adc"
			val "81:xor"
			val "83:and"
			val "51:push"
			val "51:push"
			val "50:push"
			val "29:sub"
			val "51:push"
			val "E8:call"
			val "1D:sbb"
			val "15:adc"
			val "81:sbb"
			val "68:push"
			val "5A:pop"
			val "81:adc"
			val "85:test"
			val "74:jz"
			val "85:test"
			val "7C:jl"
			val "85:test"
			val "77:ja"
			val "0F B7:movzx"
			val "15:adc"
			val "11:adc"
			val "81:adc"
			val "21:and"
			val "68:push"
			val "51:push"
			val "E8:call"
			val "C9:leave"
			val "C2:retn"
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "C9:leave"
			val "C2:retn"
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "8D:lea"
			val "51:push"
			val "52:push"
			val "51:push"
			val "E8:call"
			val "31:xor"
			val "52:push"
			val "51:push"
			val "51:push"
			val "6A:push"
			val "E8:call"
			val "15:adc"
			val "85:test"
			val "77:ja"
			val "0F B7:movzx"
			val "11:adc"
			val "35:xor"
			val "15:adc"
			val "35:xor"
			val "39:cmp"
			val "75:jnz"
			val "81:adc"
			val "15:adc"
			val "6A:push"
			val "59:pop"
			val "8D:lea"
			val "81:xor"
			val "01:add"
			val "6A:push"
			val "8D:lea"
			val "52:push"
			val "51:push"
			val "8D:lea"
			val "52:push"
			val "E8:call"
			val "6A:push"
			val "58:pop"
			val "31:xor"
			val "01:add"
			val "85:test"
			val "74:jz"
			val "85:test"
			val "72:jb"
			val "15:adc"
			val "6A:push"
			val "58:pop"
			val "11:adc"
			val "0D:or"
			val "81:or"
			val "6A:push"
			val "58:pop"
			val "8D:lea"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 17
		label "sub_541C3A"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "15:adc"
			val "39:cmp"
			val "77:ja"
			val "39:cmp"
			val "77:ja"
			val "81:adc"
			val "15:adc"
			val "11:adc"
			val "31:xor"
			val "11:adc"
			val "8D:lea"
			val "50:push"
			val "FF:push"
			val "E8:call"
			val "8D:lea"
			val "15:adc"
			val "2D:sub"
			val "81:cmp"
			val "74:jz"
			val "39:cmp"
			val "7C:jl"
			val "0F B6:movzx"
			val "68:push"
			val "5A:pop"
			val "35:xor"
			val "29:sub"
			val "52:push"
			val "68:push"
			val "FF:push"
			val "6A:push"
			val "E8:call"
			val "15:adc"
			val "8D:lea"
			val "0F B7:movzx"
			val "6A:push"
			val "8D:lea"
			val "51:push"
			val "8D:lea"
			val "50:push"
			val "6A:push"
			val "E8:call"
			val "81:adc"
			val "35:xor"
			val "81:adc"
			val "0F B7:movzx"
			val "51:push"
			val "50:push"
			val "E8:call"
			val "15:adc"
			val "0F B7:movzx"
			val "8D:lea"
			val "25:and"
			val "39:cmp"
			val "74:jz"
			val "85:test"
			val "77:ja"
			val "0F B6:movzx"
			val "0F B6:movzx"
			val "05:add"
			val "15:adc"
			val "0D:or"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 18
		label "unamed_function_16"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "81:and"
			val "15:adc"
			val "81:or"
			val "3B:cmp"
			val "77:ja"
			val "85:test"
			val "77:ja"
			val "85:test"
			val "77:ja"
			val "09:or"
			val "0F B7:movzx"
			val "15:adc"
			val "11:adc"
			val "35:xor"
			val "8D:lea"
			val "21:and"
			val "33:xor"
			val "81:add"
			val "85:test"
			val "77:ja"
			val "1D:sbb"
			val "35:xor"
			val "39:cmp"
			val "72:jb"
			val "6A:push"
			val "59:pop"
			val "01:add"
			val "2D:sub"
			val "81:adc"
			val "81:and"
			val "8D:lea"
			val "15:adc"
			val "0D:or"
			val "35:xor"
			val "C9:leave"
			val "C2:retn"
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 19
		label "sub_541DDF"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 20
		label "sub_541DEC"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "6A:push"
			val "51:push"
			val "FF:push"
			val "31:xor"
			val "50:push"
			val "E8:call"
			val "E8:call"
			val "31:xor"
			val "81:adc"
			val "35:xor"
			val "8D:lea"
			val "51:push"
			val "83:and"
			val "51:push"
			val "51:push"
			val "FF:push"
			val "E8:call"
			val "8D:lea"
			val "8D:lea"
			val "50:push"
			val "50:push"
			val "E8:call"
			val "81:adc"
			val "81:xor"
			val "68:push"
			val "5A:pop"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 21
		label "sub_541E52"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "8D:lea"
			val "51:push"
			val "FF:push"
			val "6A:push"
			val "E8:call"
			val "09:or"
			val "0F B7:movzx"
			val "29:sub"
			val "81:adc"
			val "15:adc"
			val "0F B6:movzx"
			val "25:and"
			val "0F B7:movzx"
			val "15:adc"
			val "6A:push"
			val "58:pop"
			val "81:cmp"
			val "75:jnz"
			val "39:cmp"
			val "74:jz"
			val "81:cmp"
			val "77:ja"
			val "6A:push"
			val "58:pop"
			val "11:adc"
			val "15:adc"
			val "8D:lea"
			val "8D:lea"
			val "8D:lea"
			val "6A:push"
			val "8D:lea"
			val "50:push"
			val "50:push"
			val "8D:lea"
			val "51:push"
			val "E8:call"
			val "0F B6:movzx"
			val "35:xor"
			val "85:test"
			val "77:ja"
			val "85:test"
			val "77:ja"
			val "8D:lea"
			val "39:cmp"
			val "74:jz"
			val "8D:lea"
			val "35:xor"
			val "33:xor"
			val "85:test"
			val "75:jnz"
			val "11:adc"
			val "8D:lea"
			val "85:test"
			val "77:ja"
			val "81:xor"
			val "21:and"
			val "0F B6:movzx"
			val "6A:push"
			val "58:pop"
			val "15:adc"
			val "15:adc"
			val "0F B6:movzx"
			val "33:xor"
			val "8D:lea"
			val "15:adc"
			val "0F B6:movzx"
			val "0F B6:movzx"
			val "81:adc"
			val "15:adc"
			val "C9:leave"
			val "C2:retn"
		]
	]
	node [
		id 22
		label "unamed_function_19"
		type "Internal"
		features [
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "81:adc"
			val "81:xor"
			val "39:cmp"
			val "77:ja"
			val "31:xor"
			val "C9:leave"
			val "C3:retn"
			val "55:push"
			val "89:mov"
			val "81:sub"
			val "FF:push"
			val "68:push"
			val "E8:call"
			val "11:adc"
			val "0F B7:movzx"
			val "09:or"
			val "8D:lea"
			val "01:add"
			val "8D:lea"
			val "39:cmp"
			val "7C:jl"
			val "39:cmp"
			val "75:jnz"
			val "39:cmp"
			val "74:jz"
			val "0D:or"
			val "68:push"
			val "5A:pop"
			val "8D:lea"
			val "15:adc"
			val "29:sub"
			val "50:push"
			val "E8:call"
			val "81:xor"
			val "2B:sub"
			val "2D:sub"
			val "68:push"
			val "59:pop"
			val "09:or"
			val "39:cmp"
			val "74:jz"
			val "39:cmp"
			val "75:jnz"
			val "81:cmp"
			val "77:ja"
			val "8D:lea"
			val "68:push"
			val "58:pop"
			val "21:and"
			val "6A:push"
			val "8D:lea"
			val "50:push"
			val "E8:call"
			val "81:and"
			val "15:adc"
			val "39:cmp"
			val "77:ja"
			val "31:xor"
			val "0F B7:movzx"
			val "81:cmp"
			val "7C:jl"
			val "31:xor"
			val "81:adc"
			val "13:adc"
			val "35:xor"
			val "83:and"
			val "51:push"
			val "E8:call"
			val "2D:sub"
			val "81:xor"
			val "11:adc"
			val "35:xor"
			val "15:adc"
			val "0F B6:movzx"
			val "39:cmp"
			val "77:ja"
			val "39:cmp"
			val "7C:jl"
			val "81:cmp"
			val "7C:jl"
			val "0F B6:movzx"
			val "11:adc"
			val "15:adc"
			val "81:xor"
			val "8D:lea"
			val "52:push"
			val "6A:push"
			val "FF:push"
			val "8D:lea"
			val "52:push"
			val "E8:call"
			val "0F B7:movzx"
			val "15:adc"
			val "09:or"
			val "85:test"
			val "7C:jl"
			val "68:push"
			val "58:pop"
			val "0D:or"
			val "81:adc"
			val "6A:push"
			val "58:pop"
			val "85:test"
			val "74:jz"
			val "31:xor"
			val "8D:lea"
			val "31:xor"
			val "1D:sbb"
			val "81:adc"
			val "52:push"
			val "29:sub"
			val "52:push"
			val "8D:lea"
			val "50:push"
			val "6A:push"
			val "E8:call"
			val "85:test"
			val "77:ja"
			val "0F B6:movzx"
			val "05:add"
			val "09:or"
			val "35:xor"
			val "01:add"
			val "39:cmp"
			val "74:jz"
			val "8D:lea"
			val "0F B6:movzx"
			val "8D:lea"
			val "6A:push"
			val "5A:pop"
			val "83:and"
			val "51:push"
			val "50:push"
			val "FF:push"
			val "31:xor"
			val "52:push"
			val "E8:call"
			val "6A:push"
			val "58:pop"
			val "13:adc"
			val "8D:lea"
			val "8D:lea"
			val "52:push"
			val "FF:push"
			val "FF:push"
			val "E8:call"
			val "81:or"
			val "6A:push"
			val "8D:lea"
			val "52:push"
			val "E8:call"
			val "81:sub"
			val "31:xor"
			val "11:adc"
			val "29:sub"
			val "50:push"
			val "8D:lea"
			val "52:push"
			val "8D:lea"
			val "50:push"
			val "6A:push"
			val "E8:call"
			val "09:or"
			val "15:adc"
			val "31:xor"
			val "52:push"
			val "6A:push"
			val "E8:call"
			val "35:xor"
			val "C9:leave"
			val "C2:retn"
			val "CB:retf"
			val "74:dw"
			val "CB:retf"
			val "CB:retf"
			val "CB:retf"
			val "CB:retf"
			val "4A:dec"
			val "CB:retf"
			val "00:dw"
			val "CB:retf"
			val "CB:retf"
			val "FF:dw"
			val "74:dd"
			val "4A:dec"
			val "CC:int"
		]
	]
	node [
		id 23
		label "sub_542368"
		type "Internal"
		features [
			val "33:xor"
			val "C3:retn"
		]
	]
	node [
		id 24
		label "unamed_function_20"
		type "Internal"
		features [
			val "CC:align"
			val "FF:jmp"
		]
	]
	node [
		id 25
		label "VirtualAlloc"
		type "External"
	]
	node [
		id 26
		label "LoadLibraryA"
		type "External"
	]
	node [
		id 27
		label "dword_545279"
		type "External"
	]
	edge [
		source 4
		target 1
	]
	edge [
		source 4
		target 2
	]
	edge [
		source 6
		target 2
	]
	edge [
		source 6
		target 4
	]
	edge [
		source 7
		target 1
	]
	edge [
		source 7
		target 2
	]
	edge [
		source 7
		target 25
	]
	edge [
		source 8
		target 1
	]
	edge [
		source 8
		target 2
	]
	edge [
		source 8
		target 3
	]
	edge [
		source 8
		target 4
	]
	edge [
		source 8
		target 6
	]
	edge [
		source 8
		target 26
	]
	edge [
		source 10
		target 1
	]
	edge [
		source 10
		target 6
	]
	edge [
		source 10
		target 8
	]
	edge [
		source 12
		target 1
	]
	edge [
		source 12
		target 2
	]
	edge [
		source 12
		target 3
	]
	edge [
		source 12
		target 4
	]
	edge [
		source 12
		target 6
	]
	edge [
		source 12
		target 8
	]
	edge [
		source 12
		target 9
	]
	edge [
		source 12
		target 10
	]
	edge [
		source 13
		target 6
	]
	edge [
		source 13
		target 8
	]
	edge [
		source 14
		target 3
	]
	edge [
		source 14
		target 9
	]
	edge [
		source 15
		target 2
	]
	edge [
		source 15
		target 4
	]
	edge [
		source 15
		target 10
	]
	edge [
		source 15
		target 27
	]
	edge [
		source 16
		target 1
	]
	edge [
		source 16
		target 2
	]
	edge [
		source 16
		target 3
	]
	edge [
		source 16
		target 4
	]
	edge [
		source 16
		target 6
	]
	edge [
		source 16
		target 7
	]
	edge [
		source 16
		target 8
	]
	edge [
		source 16
		target 9
	]
	edge [
		source 16
		target 10
	]
	edge [
		source 16
		target 11
	]
	edge [
		source 16
		target 12
	]
	edge [
		source 16
		target 13
	]
	edge [
		source 16
		target 14
	]
	edge [
		source 16
		target 15
	]
	edge [
		source 17
		target 3
	]
	edge [
		source 17
		target 4
	]
	edge [
		source 17
		target 6
	]
	edge [
		source 17
		target 9
	]
	edge [
		source 20
		target 17
	]
	edge [
		source 20
		target 3
	]
	edge [
		source 20
		target 8
	]
	edge [
		source 20
		target 13
	]
	edge [
		source 21
		target 10
	]
	edge [
		source 21
		target 11
	]
	edge [
		source 22
		target 1
	]
	edge [
		source 22
		target 2
	]
	edge [
		source 22
		target 19
	]
	edge [
		source 22
		target 20
	]
	edge [
		source 22
		target 21
	]
	edge [
		source 22
		target 6
	]
	edge [
		source 22
		target 8
	]
	edge [
		source 22
		target 9
	]
	edge [
		source 22
		target 14
	]
]
